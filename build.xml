<?xml version="1.0"?>
<!--*************************************************************************
Copyright (c) 2004, Colorado School of Mines and others. All rights reserved.
This program and accompanying materials are made available under the terms of
the Common Public License - v1.0, which accompanies this distribution, and is
available at http://www.eclipse.org/legal/cpl-v10.html
*************************************************************************-->
<project name="jtk" default="all" basedir=".">

  <description>
    The Colorado School of Mines Java Tool Kit
  </description>
  <property name="title" value="MinesJTK"/>

  <!-- Project directories -->
  <property name="bin" value="${basedir}/bin"/>
  <property name="jar" value="${basedir}/jar"/>
  <property name="lib" value="${basedir}/lib"/>
  <property name="src" value="${basedir}/src"/>
  <property name="build" value="${basedir}/build"/>
  <property name="build.cls" value="${build}/cls"/>
  <property name="build.doc" value="${build}/doc"/>
  <property name="build.jar" value="${build}/jar"/>

  <!-- Where is Scala? -->
  <property environment="env"/>
  <condition property="scala.home" value="${env.SCALA_HOME}">
    <isset property="env.SCALA_HOME"/>
  </condition>

  <!-- Other global settings -->
  <path id="classpath">
    <fileset dir="${jar}" includes="**/*.jar"/>
  </path>

  <!-- Initialize -->
  <target name="init">
    <tstamp/>
    <mkdir dir="${build}"/>
    <mkdir dir="${build.cls}"/>
    <mkdir dir="${build.doc}"/>
    <mkdir dir="${build.jar}"/>
  </target>

  <!-- Compile Java sources -->
  <target name="compile-java" depends="init">
    <javac srcdir="${src}/main/java:${src}/test/java:${src}/demo/java" 
      destdir="${build.cls}" 
      compiler="javac1.6"
      memoryMaximumSize="500m"
      fork="true"
      debug="on" 
      deprecation="on"
      includeantruntime="false">
      <compilerarg value="-Xlint:all,-serial"/>
      <classpath refid="classpath"/>
      <exclude name="**/old/**"/>
      <exclude name="**/new/**"/>
    </javac>
  </target>

  <!-- Compile Scala sources (only if SCALA_HOME defined) -->
  <target if="scala.home" name="compile-scala" depends="init,compile-java">
    <path id="scala.tools.classpath">
      <pathelement location="${scala.home}/lib/scala-compiler.jar"/>
      <pathelement location="${scala.home}/lib/scala-library.jar"/>
    </path>
    <path id="scala.build.classpath">
      <pathelement location="${build.cls}"/>
      <fileset dir="${jar}" includes="**/*.jar"/>
      <pathelement location="${scala.home}/lib/scala-library.jar"/>
    </path>
    <taskdef resource="scala/tools/ant/antlib.xml">
      <classpath refid="scala.tools.classpath"/>
    </taskdef>
    <scalac srcdir="${src}/main/scala:${src}/test/scala:${src}/demo/scala" 
      destdir="${build.cls}" 
      deprecation="on">
      <classpath refid="scala.build.classpath"/>
    </scalac>
  </target>

  <!-- Build Java archive -->
  <target name="jar" depends="compile-java,compile-scala,copy-resources"
      description="build Java archive">
    <jar jarfile="${build.jar}/edu_mines_jtk.jar" basedir="${build.cls}"/>
  </target>
  <target name="copy-resources">
    <copy todir="${build.cls}">
      <fileset dir="${src}/main/resources"/>
      <fileset dir="${src}/test/resources"/>
      <fileset dir="${src}/demo/resources"/>
    </copy>
  </target>

  <!--Build javadocs -->
  <target name="doc" depends="init" description="build javadocs">
    <javadoc 
      classpathref="classpath"
      destdir="${build.doc}/api" 
      author="true"
      version="true"
      use="true"
      windowtitle="${title}">
      <packageset dir="src/main/java" defaultexcludes="yes">
        <exclude name="edu/mines/jtk/**/new/**"/>
        <exclude name="edu/mines/jtk/**/old/**"/>
      </packageset>
    </javadoc>
  </target>

  <!--Build javadocs and push to github -->
  <target name="doc-push" depends="init,doc" description="build javadocs and push to github">
    <exec executable="/bin/bash" failonerror="true">
      <arg value="${bin}/docpush.sh"/>
    </exec>
  </target>

  <!-- Build everything (except javadocs) -->
  <target name="all" depends="jar"
      description="build everything"/>

  <!-- Clean jar -->
  <target name="clean-jar"
      description="delete all products of jar build">
    <delete dir="${build.cls}"/>
    <delete dir="${build.jar}"/>
  </target>

  <!-- Cleanup -->
  <target name="clean"
      description="delete all products of build">
    <delete dir="${build}"/>
  </target>

</project>
